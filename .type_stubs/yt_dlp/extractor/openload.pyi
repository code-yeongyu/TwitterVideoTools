"""
This type stub file was generated by pyright.
"""

def cookie_to_dict(cookie): # -> dict[str, Unknown]:
    ...

def cookie_jar_to_list(cookie_jar): # -> list[dict[str, Unknown]]:
    ...

class PhantomJSwrapper:
    """PhantomJS wrapper class

    This class is experimental.
    """
    INSTALL_HINT = ...
    _BASE_JS = ...
    _TEMPLATE = ...
    _TMP_FILE_NAMES = ...
    def __init__(self, extractor, required_version=..., timeout=...) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    def get(self, url, html=..., video_id=..., note=..., note2=..., headers=..., jscode=...): # -> tuple[str, Unknown | Literal['', b'']]:
        """
        Downloads webpage (if needed) and executes JS

        Params:
            url: website url
            html: optional, html code of website
            video_id: video id
            note: optional, displayed when downloading webpage
            note2: optional, displayed when executing JS
            headers: custom http headers
            jscode: code to be executed when page is loaded

        Returns tuple with:
            * downloaded website (after JS execution)
            * anything you print with `console.log` (but not inside `page.execute`!)

        In most cases you don't need to add any `jscode`.
        It is executed in `page.onLoadFinished`.
        `saveAndExit();` is mandatory, use it instead of `phantom.exit()`
        It is possible to wait for some element on the webpage, e.g.
            var check = function() {
              var elementFound = page.evaluate(function() {
                return document.querySelector('#b.done') !== null;
              });
              if(elementFound)
                saveAndExit();
              else
                window.setTimeout(check, 500);
            }

            page.evaluate(function(){
              document.querySelector('#a').click();
            });
            check();
        """
        ...
    
    def execute(self, jscode, video_id=..., *, note=...): # -> Literal['', b'']:
        """Execute JS and return stdout"""
        ...
    


