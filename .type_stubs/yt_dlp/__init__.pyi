"""
This type stub file was generated by pyright.
"""

import collections
import getpass
import itertools
import optparse
import os
import re
import sys
from .compat import compat_shlex_quote
from .cookies import SUPPORTED_BROWSERS, SUPPORTED_KEYRINGS
from .downloader import FileDownloader
from .downloader.external import get_external_downloader
from .extractor import gen_extractors, list_extractor_classes, list_extractors
from .extractor.adobepass import MSO_INFO
from .extractor.common import InfoExtractor
from .options import parseOpts
from .postprocessor import FFmpegExtractAudioPP, FFmpegMergerPP, FFmpegPostProcessor, FFmpegSubtitlesConvertorPP, FFmpegThumbnailsConvertorPP, FFmpegVideoConvertorPP, FFmpegVideoRemuxerPP, MetadataFromFieldPP, MetadataParserPP
from .update import Updater
from .utils import DateRange, DownloadCancelled, DownloadError, GeoUtils, NO_DEFAULT, POSTPROCESS_WHEN, PlaylistEntries, SameFileError, decodeOption, download_range_func, expand_path, float_or_none, format_field, int_or_none, match_filter_func, parse_duration, preferredencoding, read_batch_urls, read_stdin, render_table, setproctitle, std_headers, traverse_obj, variadic, write_string
from .YoutubeDL import YoutubeDL

__license__ = ...
_IN_CLI = ...
def get_urls(urls, batchfile, verbose): # -> list[str | Unknown]:
    ...

def print_extractor_information(opts, urls): # -> bool:
    ...

def set_compat_opts(opts): # -> None:
    ...

def validate_options(opts): # -> tuple[list[Unknown], list[Unknown]]:
    ...

def get_postprocessors(opts): # -> Generator[Unknown | dict[str, str | Unknown] | dict[str, str | Unknown | bool] | dict[str, str], None, None]:
    ...

ParsedOptions = ...
def parse_options(argv=...): # -> ParsedOptions:
    """@returns ParsedOptions(parser, opts, urls, ydl_opts)"""
    ...

def main(argv=...):
    ...

__all__ = ['main', 'YoutubeDL', 'parse_options', 'gen_extractors', 'list_extractors']
